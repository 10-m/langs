       """A minimal subset of the locale module used at interpreter startup
       (imported by the _io module), in order to reduce startup time.
       
       Don't import directly from third-party code; use the `locale` module instead!
    1: """
       
    1: import sys
    1: import _locale
       
    1: if sys.platform.startswith("win"):
>>>>>>     def getpreferredencoding(do_setlocale=True):
>>>>>>         return _locale._getdefaultlocale()[1]
       else:
    1:     try:
    1:         _locale.CODESET
>>>>>>     except AttributeError:
>>>>>>         def getpreferredencoding(do_setlocale=True):
                   # This path for legacy systems needs the more complex
                   # getdefaultlocale() function, import the full locale module.
>>>>>>             import locale
>>>>>>             return locale.getpreferredencoding(do_setlocale)
           else:
    1:         def getpreferredencoding(do_setlocale=True):
    2:             assert not do_setlocale
    2:             result = _locale.nl_langinfo(_locale.CODESET)
    2:             if not result and sys.platform == 'darwin':
                       # nl_langinfo can return an empty string
                       # when the setting has an invalid value.
                       # Default to UTF-8 in that case because
                       # UTF-8 is the default charset on OSX and
                       # returning nothing will crash the
                       # interpreter.
>>>>>>                 result = 'UTF-8'
    2:             return result
